#user  nobody;
worker_processes  1;
error_log  /var/log/nginx/error.log;
pid	   /var/log/nginx/nginx.pid;
events {
	use epoll;
	worker_connections  1024;
}
http {
	include	   mime.types;
	default_type  application/octet-stream;
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
					 '$status $body_bytes_sent "$http_referer" '
					 '"$http_user_agent" "$http_x_forwarded_for"';
	access_log  /var/log/nginx/access.log  main;
	sendfile		on;
	keepalive_timeout  30;
	gzip on;  
	gzip_min_length  1k;  
	gzip_buffers	 4  16k;  
	gzip_http_version 1.0;  
	gzip_comp_level 2;  
	gzip_types  text/plain application/x-javascript text/css application/xml;  
	gzip_vary on;  
	upstream backend {                 #后台负载均衡容器及端口，本例为一个，t1 tomcat容器的名字
	    server tomcat1:8080;           # tomcat1为docker的links          
	}
	server {
		listen	   80 default;
		server_name  localhost;
		location ~ .*\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css)$  # 由nginx处理静态页面
			{ 
				root   /var/share/nginx/html; 
				expires	  30d; #缓存到客户端30天
			} 
		error_page  404			  /404.html;
		#redirect server error pages to the static page /50x.html
		error_page   500 502 503 504  /50x.html;
		location = /50x.html {
			root   /var/share/nginx/html;
		}
		location ~  \.(jsp|do)$  {#所有jsp的动态请求都交给Tomcat处理 
		    proxy_pass http://backend;  #来自jsp或者do的后缀的请求交给tomcat处理
			proxy_redirect off;
			proxy_set_header Host $host;	#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			client_max_body_size 10m;   #允许客户端请求的最大单文件字节数
			client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数
			proxy_connect_timeout 90;   #nginx跟后端服务器连接超时时间
			proxy_read_timeout 90;	 #连接成功后，后端服务器响应时间
			proxy_buffer_size 4k;	  #设置代理服务器（nginx）保存用户头信息的缓冲区大小
			proxy_buffers  6  32k;	   #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
			proxy_busy_buffers_size 64k;#高负荷下缓冲大小（proxy_buffers*2）
		    proxy_temp_file_write_size 64k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
		}
	}  
}
